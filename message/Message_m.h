//
// Generated file, do not edit! Created by nedtool 5.1 from message/Message.msg.
//

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#ifndef __MESSAGE_M_H
#define __MESSAGE_M_H

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0501
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



/**
 * Class generated from <tt>message/Message.msg:1</tt> by nedtool.
 * <pre>
 * message Message
 * {
 *     int src;
 *     int dst;
 *     int sessionID;
 *     int messageID;
 *     int priority; // low, normal, high
 *     int hopCount = 0; // do we need this?
 *     simtime_t creationTime; // need to be 'simetime_t' everywhere where we want to get a time, 
 *     // shoudn't be cast to others (e.g. 'double') cause of lost precision effect
 *     //  (simtime_t is 64 bit when 'double' has only a 52 bit mantissa ref. doc 4.1.4) 
 * }
 * </pre>
 */
class Message : public ::omnetpp::cMessage
{
  protected:
    int src;
    int dst;
    int sessionID;
    int messageID;
    int priority;
    int hopCount;
    ::omnetpp::simtime_t creationTime;

  private:
    void copy(const Message& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const Message&);

  public:
    Message(const char *name=nullptr, short kind=0);
    Message(const Message& other);
    virtual ~Message();
    Message& operator=(const Message& other);
    virtual Message *dup() const override {return new Message(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual int getSrc() const;
    virtual void setSrc(int src);
    virtual int getDst() const;
    virtual void setDst(int dst);
    virtual int getSessionID() const;
    virtual void setSessionID(int sessionID);
    virtual int getMessageID() const;
    virtual void setMessageID(int messageID);
    virtual int getPriority() const;
    virtual void setPriority(int priority);
    virtual int getHopCount() const;
    virtual void setHopCount(int hopCount);
    virtual ::omnetpp::simtime_t getCreationTime() const;
    virtual void setCreationTime(::omnetpp::simtime_t creationTime);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const Message& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, Message& obj) {obj.parsimUnpack(b);}


#endif // ifndef __MESSAGE_M_H

